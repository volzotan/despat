{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "984e4220a451dcfc312588724f5df22c",
    "entities": [
      {
        "tableName": "Status",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `timestamp` TEXT, `images_taken` INTEGER NOT NULL, `images_in_memory` INTEGER NOT NULL, `free_space_internal` REAL NOT NULL, `free_space_external` REAL NOT NULL, `battery_internal` INTEGER NOT NULL, `battery_external` INTEGER NOT NULL, `state_charging` INTEGER NOT NULL, `temperature_device` REAL NOT NULL, `temperature_battery` REAL NOT NULL, `free_memory_heap` INTEGER NOT NULL, `free_memory_heap_native` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "numberImagesTaken",
            "columnName": "images_taken",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "numberImagesInMemory",
            "columnName": "images_in_memory",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "freeSpaceInternal",
            "columnName": "free_space_internal",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "freeSpaceExternal",
            "columnName": "free_space_external",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "batteryInternal",
            "columnName": "battery_internal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "batteryExternal",
            "columnName": "battery_external",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stateCharging",
            "columnName": "state_charging",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "temperatureDevice",
            "columnName": "temperature_device",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "temperatureBattery",
            "columnName": "temperature_battery",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "freeMemoryHeap",
            "columnName": "free_memory_heap",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "freeMemoryHeapNative",
            "columnName": "free_memory_heap_native",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Session",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `start` TEXT, `end` TEXT, `latitude` REAL, `longitude` REAL, `image_width` INTEGER NOT NULL, `image_height` INTEGER NOT NULL, `exclusion_image` BLOB, `compressed_image` TEXT, `homography_matrix` TEXT, `resumed` INTEGER NOT NULL, `exposure_threshold` REAL, `exposure_compensation` REAL, `detectorconfig_detector` TEXT, `detectorconfig_tilesize` INTEGER, `cameraconfig_cameraDevice` TEXT, `cameraconfig_persistentCamera` INTEGER, `cameraconfig_shutterInterval` INTEGER, `cameraconfig_legacyCameraController` INTEGER, `cameraconfig_formatJpg` INTEGER, `cameraconfig_formatRaw` INTEGER, `cameraconfig_zoomRegion` TEXT, `cameraconfig_exposureCompensation` INTEGER, `cameraconfig_secondImageExposureCompensation` INTEGER, `cameraconfig_endCaptureWithoutUnlockingFocus` INTEGER, `cameraconfig_numberOfBurstImages` INTEGER, `cameraconfig_jpegQuality` INTEGER, `cameraconfig_meteringMaxTime` INTEGER, `cameraconfig_runMediascannerAfterCapture` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionName",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "start",
            "columnName": "start",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "end",
            "columnName": "end",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "imageWidth",
            "columnName": "image_width",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "imageHeight",
            "columnName": "image_height",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exclusionImage",
            "columnName": "exclusion_image",
            "affinity": "BLOB",
            "notNull": false
          },
          {
            "fieldPath": "compressedImage",
            "columnName": "compressed_image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "homographyMatrix",
            "columnName": "homography_matrix",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "resumed",
            "columnName": "resumed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exposureThreshold",
            "columnName": "exposure_threshold",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "exposureCompensation",
            "columnName": "exposure_compensation",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "detectorConfig.detector",
            "columnName": "detectorconfig_detector",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "detectorConfig.tilesize",
            "columnName": "detectorconfig_tilesize",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.cameraDevice",
            "columnName": "cameraconfig_cameraDevice",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.persistentCamera",
            "columnName": "cameraconfig_persistentCamera",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.shutterInterval",
            "columnName": "cameraconfig_shutterInterval",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.legacyCameraController",
            "columnName": "cameraconfig_legacyCameraController",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.formatJpg",
            "columnName": "cameraconfig_formatJpg",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.formatRaw",
            "columnName": "cameraconfig_formatRaw",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.zoomRegion",
            "columnName": "cameraconfig_zoomRegion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.exposureCompensation",
            "columnName": "cameraconfig_exposureCompensation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.secondImageExposureCompensation",
            "columnName": "cameraconfig_secondImageExposureCompensation",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.endCaptureWithoutUnlockingFocus",
            "columnName": "cameraconfig_endCaptureWithoutUnlockingFocus",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.numberOfBurstImages",
            "columnName": "cameraconfig_numberOfBurstImages",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.jpegQuality",
            "columnName": "cameraconfig_jpegQuality",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.meteringMaxTime",
            "columnName": "cameraconfig_meteringMaxTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cameraConfig.runMediascannerAfterCapture",
            "columnName": "cameraconfig_runMediascannerAfterCapture",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Capture",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `session_id` INTEGER NOT NULL, `recording_time` TEXT, `image_path` TEXT, `exposure_time` INTEGER NOT NULL, `aperture` REAL NOT NULL, `iso` INTEGER NOT NULL, `autofocus_state` INTEGER NOT NULL, `processed_detector` INTEGER NOT NULL, `processed_compressor` INTEGER NOT NULL, FOREIGN KEY(`session_id`) REFERENCES `Session`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "session_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "recordingTime",
            "columnName": "recording_time",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "image_path",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "exposureTime",
            "columnName": "exposure_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aperture",
            "columnName": "aperture",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "iso",
            "columnName": "iso",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "autofocusState",
            "columnName": "autofocus_state",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "processed_detector",
            "columnName": "processed_detector",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "processed_compressor",
            "columnName": "processed_compressor",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Capture_session_id",
            "unique": false,
            "columnNames": [
              "session_id"
            ],
            "createSql": "CREATE  INDEX `index_Capture_session_id` ON `${TABLE_NAME}` (`session_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Session",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "session_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "HomographyPoint",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `session_id` INTEGER NOT NULL, `modification_time` TEXT, `x` REAL, `y` REAL, `latitude` REAL, `longitude` REAL, FOREIGN KEY(`session_id`) REFERENCES `Session`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "session_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "modificationTime",
            "columnName": "modification_time",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "x",
            "columnName": "x",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "y",
            "columnName": "y",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_HomographyPoint_session_id",
            "unique": false,
            "columnNames": [
              "session_id"
            ],
            "createSql": "CREATE  INDEX `index_HomographyPoint_session_id` ON `${TABLE_NAME}` (`session_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Session",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "session_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Position",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `capture_id` INTEGER NOT NULL, `minx` REAL, `miny` REAL, `maxx` REAL, `maxy` REAL, `x` REAL, `y` REAL, `latitude` REAL, `longitude` REAL, `type` TEXT, `type_id` INTEGER NOT NULL, `recognition_confidence` REAL, `position_confidence` REAL, FOREIGN KEY(`capture_id`) REFERENCES `Capture`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "captureId",
            "columnName": "capture_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minx",
            "columnName": "minx",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "miny",
            "columnName": "miny",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "maxx",
            "columnName": "maxx",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "maxy",
            "columnName": "maxy",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "x",
            "columnName": "x",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "y",
            "columnName": "y",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "typeId",
            "columnName": "type_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "recognitionConfidence",
            "columnName": "recognition_confidence",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "positionConfidence",
            "columnName": "position_confidence",
            "affinity": "REAL",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Position_capture_id",
            "unique": false,
            "columnNames": [
              "capture_id"
            ],
            "createSql": "CREATE  INDEX `index_Position_capture_id` ON `${TABLE_NAME}` (`capture_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Capture",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "capture_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ErrorEvent",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `session_id` INTEGER, `timestamp` TEXT, `description` TEXT, `type` TEXT, `exception_message` TEXT, `stacktrace` TEXT, FOREIGN KEY(`session_id`) REFERENCES `Session`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "session_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "exceptionMessage",
            "columnName": "exception_message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "stacktrace",
            "columnName": "stacktrace",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ErrorEvent_session_id",
            "unique": false,
            "columnNames": [
              "session_id"
            ],
            "createSql": "CREATE  INDEX `index_ErrorEvent_session_id` ON `${TABLE_NAME}` (`session_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Session",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "session_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Event",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `timestamp` TEXT, `type` INTEGER NOT NULL, `payload` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "payload",
            "columnName": "payload",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Benchmark",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `session_id` INTEGER, `timestamp` TEXT, `type` INTEGER NOT NULL, `detector` TEXT, `tilesize` INTEGER NOT NULL, `inference_time` REAL NOT NULL, FOREIGN KEY(`session_id`) REFERENCES `Session`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "session_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "detector",
            "columnName": "detector",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tilesize",
            "columnName": "tilesize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "inferenceTime",
            "columnName": "inference_time",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Benchmark_session_id",
            "unique": false,
            "columnNames": [
              "session_id"
            ],
            "createSql": "CREATE  INDEX `index_Benchmark_session_id` ON `${TABLE_NAME}` (`session_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Session",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "session_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DeviceLocation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `timestamp` TEXT, `latitude` REAL, `longitude` REAL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"984e4220a451dcfc312588724f5df22c\")"
    ]
  }
}